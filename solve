#!/usr/bin/env python

import sys
import z3

from pprint import PrettyPrinter
from typing import List

from src.package import load_dict, parse_repository, parse_command_list, \
                        parse_initial_state
from src.encode import encode, to_bools, GUESS_STEPS
from src.decode import decode
# from src.compare import flatten_repository, parse_constraints


def main(argv: List[str]):
    # Argparse
    repository_path = argv[1]
    initial_state_path = argv[2]
    constraints_path = argv[3]

    # Parse repo
    raw_repo = load_dict(repository_path)
    packages = parse_repository(raw_repo)
    # packages = flatten_repository(packages)

    # Parse constraints
    raw_constraints = load_dict(constraints_path)
    final_state_constraints = parse_command_list(raw_constraints)

    raw_initial = load_dict(initial_state_path)
    initial_state = parse_initial_state(raw_initial)

    pprinter = PrettyPrinter()
    print('PACKAGES')
    pprinter.pprint(list(packages))
    print('=============')
    print('INITIAL STATE CONSTRAINTS')
    pprinter.pprint(initial_state)
    print('=============')
    print('FINAL STATE CONSTRAINTS')
    pprinter.pprint(final_state_constraints)
    print('=============')

    print('MODEL')
    time_range = list(range(GUESS_STEPS))
    bools = to_bools(packages, time_range)
    problem = encode(bools, packages, final_state_constraints, initial_state, time_range)
    was_sat = problem.check()
    if was_sat == z3.sat:
        model = problem.model()
        print(model)
        print('COMMANDS')
        commands = decode(model, bools, packages, time_range)
        print(commands)
        print('=============')
    elif was_sat == z3.unknown:
        print('Unknown')
    else:
        print('Impossible')
    print('=============')


if __name__ == '__main__':
    main(sys.argv)
